{
  "id": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-tennis.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "The SportsJS Soccer schema contains properties common to Tennis.",
  "definitions": {
    "tennisTournamentMetadata": {
      "description": "For holding metadata having to do with a tennis tournament. Includes an attribute for the name of the tennis tour.",
      "allOf": [
        {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/commonAttributes"
        }
      ],
      "properties": {
        "tourName": {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/name",
          "description": "The name of the tour."
        }
      }
    },
    "tennisEventMetadata": {
      "description": "Metadata about the specific tennis match. | When in the match this document was issued.",
      "allOf": [
        {
          "$ref": "#/definitions/eventStateTennis"
        }
      ],
      "properties": {
        "numberOfSets": {
          "type": "string",
          "description": "How many sets the match is played for. Normally 3 or 5."
        }
      }
    },
    "tennisPlayerStats": {
      "description": "Holds tennis-specific stats. Used for singles matches. | Generally having to do with the score of the match.",
      "allOf": [
        {
          "$ref": "#/definitions/baseTennisStats"
        }
      ],
      "properties": {
        "statsTennisSet": {
          "$ref": "#/definitions/tennisStatsSet",
          "description": ""
        }
      }
    },
    "tennisTeamStats": {
      "description": "Holds tennis-specific stats. Used for doubles matches. | Generally having to do with the score of the match.",
      "allOf": [
        {
          "$ref": "#/definitions/baseTennisStats"
        }
      ],
      "properties": {
        "statsTennisSet": {
          "$ref": "#/definitions/tennisStatsSet",
          "description": ""
        }
      }
    },
    "tennisStatsSet": {
      "description": "Holds the score of a set. | Includes an attribute for a set's tiebreaker score.",
      "allOf": [
        {
          "$ref": "#/definitions/baseTennisStats"
        }
      ],
      "properties": {
        "statsTennisGame": {
          "$ref": "#/definitions/tennisStatsGame",
          "description": ""
        },
        "score": {
          "type": "string",
          "description": "Either love, 15, 30, 40, or game."
        },
        "duration": {
          "type": "string",
          "description": "The length in minutes of the set or game where it is inserted."
        },
        "setNumber": {
          "type": "string",
          "description": "An integer, generally 1 through 7."
        },
        "scoreTiebreaker": {
          "type": "string",
          "description": "An integer. Generally 0 through 7."
        }
      }
    },
    "tennisStatsGame": {
      "description": "Holds the score of a game. | Also holds details of each point.",
      "allOf": [
        {
          "$ref": "#/definitions/baseTennisStats"
        }
      ],
      "properties": {
        "score": {
          "$ref": "#/definitions/tennisGameResult",
          "description": "Either love, 15, 30, 40, or game."
        },
        "duration": {
          "type": "string",
          "description": "The length in minutes of the set or game where it is inserted."
        }
      }
    },
    "baseTennisStats": {
      "description": "Basic elements and attributes for tennis statistics",
      "allOf": [
        {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/commonAttributes"
        },
        {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/coverageAttributes"
        },
        {
          "$ref": "#/definitions/statsTennis"
        }
      ],
      "properties": {
        "statsTennisService": {
          "$ref": "#/definitions/tennisStatsService",
          "description": ""
        },
        "statsTennisReturn": {
          "$ref": "#/definitions/tennisStatsReturn",
          "description": ""
        }
      }
    },
    "tennisStatsService": {
      "description": "Stats for the play where the player served.",
      "allOf": [
        {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/commonAttributes"
        },
        {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/coverageAttributes"
        }
      ],
      "properties": {
        "aces": {
          "type": "string",
          "description": "How many serve-aces the player shot."
        },
        "firstServicesGood": {
          "type": "string",
          "description": "Number of first serves that were good."
        },
        "firstServicesGoodPct": {
          "type": "string",
          "description": "The percentage of good first serves."
        },
        "firstServicesPointsWon": {
          "type": "string",
          "description": "How many points won after the first serve was good."
        },
        "firstServicesPointsWonPct": {
          "type": "string",
          "description": "Percentage of games won after first serve was good."
        },
        "secondServicesPointsWon": {
          "type": "string",
          "description": "How many points won after the second serve was good."
        },
        "secondServicesPointsWonPct": {
          "type": "string",
          "description": "Percentage of games won after second serve was good."
        },
        "serviceGamesPlayed": {
          "type": "string",
          "description": "How many games in the match or set this player or team served."
        },
        "serviceGamesWon": {
          "type": "string",
          "description": "Number of games won in which the player served."
        },
        "serviceGamesWonPct": {
          "type": "string",
          "description": "The percentage of games won in which the player served."
        },
        "breakPointsAgainst": {
          "type": "string",
          "description": "How many break-points did the other team/player have against the serving player."
        },
        "breakPointsSaved": {
          "type": "string",
          "description": "How many of these break-points were saved by the serving player."
        },
        "breakPointsSavedPct": {
          "type": "string",
          "description": "The percentage of breakpoints saved. (There is some discussion on whether to include all possible break-points or just the deciding ones.)"
        },
        "servePointsPlayed": {
          "type": "string",
          "description": "How many points were played with this player/team serving. New attribute and therefore using the more proper term serve instead of service."
        },
        "servicePointsWon": {
          "type": "string",
          "description": "Total points won where the player served. This should be the same as a sum of first-service-points-won and second-service-points-won."
        },
        "servicePointsWonPct": {
          "type": "string",
          "description": "The percentage of points won by the serving player. Should be possible to calculate from other attributes here."
        },
        "doubleFaults": {
          "type": "string",
          "description": "How many double-faults committed by the serving player."
        },
        "firstServiceTopSpeed": {
          "type": "string",
          "description": "The top speed recorded among the serves from this player/team."
        },
        "firstServeAverageSpeed": {
          "type": "string",
          "description": "The average speed recorded among the first serves from this player/team. New attribute and therefore using the more proper term serve instead of service."
        },
        "secondServicesGood": {
          "type": "string",
          "description": "The number of good second serves."
        },
        "secondServicesGoodPct": {
          "type": "string",
          "description": "The percentage of good second serves."
        },
        "secondServeAverageSpeed": {
          "type": "string",
          "description": "The average speed recorded among the second serves from this player/team. New attribute and therefore using the more proper term serve instead of service."
        },
        "speedUnits": {
          "type": "string",
          "description": "The measurement unit used for the various speed attributes. Normally mph, but can be m/s or km/h or something else."
        }
      }
    },
    "tennisStatsReturn": {
      "description": "Stats for play where the player is receiving the serve.",
      "allOf": [
        {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/commonAttributes"
        },
        {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/coverageAttributes"
        }
      ],
      "properties": {
        "returnsPlayed": {
          "type": "string",
          "description": "How many points played where this player/team received the serve."
        },
        "receivePointsWon": {
          "type": "string",
          "description": "How many points won by the receiving player. New attribute using the term receive which is preferred to return."
        },
        "receivePointsWonPct": {
          "type": "string",
          "description": "The percentage of points won by the receiving player. New attribute using the term receive which is preferred to return."
        },
        "firstServiceReturnPointsWon": {
          "type": "string",
          "description": "How many points won by the player after receiving the first serve."
        },
        "firstServiceReturnPointsWonPct": {
          "type": "string",
          "description": "The percentage of points won by the player after receiving the first serve."
        },
        "secondServiceReturnPointsWon": {
          "type": "string",
          "description": "How many points won after receiving the second serve."
        },
        "secondServiceReturnPointsWonPct": {
          "type": "string",
          "description": "The percentage of points won after receiving the second serve."
        },
        "returnGamesPlayed": {
          "type": "string",
          "description": "And how does this compare to the returns-played and matches-played above?"
        },
        "returnGamesWon": {
          "type": "string",
          "description": "How many games won after receiving the serve."
        },
        "returnGamesWonPct": {
          "type": "string",
          "description": "The percentage of games won after receiving the serve."
        },
        "breakPointsPlayed": {
          "type": "string",
          "description": "How many possible break-points the receiving player/team had."
        },
        "breakPointsConverted": {
          "type": "string",
          "description": "The number of break-points that resulted in actually breaking the serve."
        },
        "breakPointsConvertedPct": {
          "type": "string",
          "description": "The percentage of converted break-points."
        }
      }
    },
    "statsTennis": {
      "description": "",
      "properties": {
        "netPointsWon": {
          "type": "string",
          "description": "Points won after the player went forward close to the net."
        },
        "netPointsPlayed": {
          "type": "string",
          "description": "Number of points played where the player went forward to the net."
        },
        "netPointsWonPct": {
          "type": "string",
          "description": "Percentage of points won after the player went forward close to the net. Should be possible to calculate from the other net-xxx attributes."
        },
        "pointsWon": {
          "type": "string",
          "description": "Total number of points won."
        },
        "winners": {
          "type": "string",
          "description": "Total number of winning strokes."
        },
        "winnersForehand": {
          "type": "string",
          "description": "Total number of winning strokes using the forehand."
        },
        "winnersBackhand": {
          "type": "string",
          "description": "Total number of winning strokes using the backhand."
        },
        "winnersVolley": {
          "type": "string",
          "description": "Total number of winning strokes using volley."
        },
        "unforcedErrors": {
          "type": "string",
          "description": "Total number of unforced errors performed."
        }
      }
    },
    "eventStateTennis": {
      "description": "A group of attributes (set, game, server, server-score, receiver receiver-score, serve-number) that can be used for tennis actions.",
      "properties": {
        "set": {
          "type": "string",
          "description": "Which set in the game this item covers. Normally 1,2,3,4 or 5."
        },
        "game": {
          "type": "string",
          "description": "Wich game in the current set this item covers. Generally 1 through 7."
        },
        "serverIdref": {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/idRef",
          "description": "A pointer to the player-id or team-id who served the ball on this point."
        },
        "serverScore": {
          "$ref": "#/definitions/tennisGameResult",
          "description": "The score of the player or team presently serving, either love, 15, 30, 40, game."
        },
        "receiverIdref": {
          "$ref": "http://iptc.org/std-dev/SportsJS/specification/sportsjs-core.json#/definitions/idRef",
          "description": "A pointer to the player-id or team-id who received the served ball on this point."
        },
        "receiverScore": {
          "$ref": "#/definitions/tennisGameResult",
          "description": "The score of the player or team presently receiving, either love, 15, 30, 40, game."
        },
        "serveNumber": {
          "type": "string",
          "enum": ["first", "second"],
          "description": "Identifying either the first or second serve."
        }
      }
    },
    "tennisGameResult": {
      "type": "string",
      "description": "The score of the player or team presently serving, either love, 15, 30, 40, game.",
      "enum": [
        "love",
        "15",
        "30",
        "40",
        "game",
        "ad",
        "deuce"
      ]
    }
  }
}
